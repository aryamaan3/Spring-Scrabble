language: java

jdk:
  - openjdk17
  
env:
  #- NB_JOUEURS=3

cache:
  directories:
    - $HOME/.m2

services:
  - docker

install:
  - mvn clean install -DskipTests

script:
  #- docker version
  #- echo "nb joueurs = $NB_JOUEURS "
  #- mvn test
  #- docker build joueur -t scrabble:joueur
  #- cd moteur
  #- docker run -d --name joueur_test -e PORT="8081" -e LANCEMENT="POUR_LES_TEST" -p 8081:8081 scrabble:joueur
  #- mvn failsafe:integration-test -Dit.test=prg.exemple.demoscrabble.MoteurWebControleurITCase#demanderAuJoueurDeJoueurTest
  #- docker start joueur_test
  #- mvn failsafe:integration-test -Dit.test=prg.exemple.demoscrabble.MoteurWebControleurITCase#demanderAuJoueurDeJoueurTest2foisDeSuite
  #- mvn exec:java -Dexec.args="closingAtTheEnd" &
  #- cd ../joueur
  #- mvn exec:java
  # construction des dockers

  - docker build anagrammeur -t scrabble:anagrammeur
  - docker build appariement -t scrabble:appariement
  - docker build partie -t scrabble:partie
  - docker build joueur -t scrabble:joueur
  #- Lance les dockers

  # Pr√©cision des ports pas utile ?
  #- docker run -d --name anagrammeur_test -e PORT="8080" -e LANCEMENT="POUR_LES_TEST" -p 8084:8084 scrabble:anagrammeur

  #- docker run -d --name anagrammeur_test scrabble:anagrammeur
  #- docker run -d --name appariement_test scrabble:appariement
  #- docker run -d --name partie_test scrabble:partie
  - docker-compose up --scale joueur=4

  - mvn test
  - cd appariement
  - mvn exec:java &
  - cd ../joueur
  - mvn exec:java &
  - cd ../partie
  - mvn exec:java &
  - cd ../anagrammeur
  - mvn exec:java &
  - cd ..

